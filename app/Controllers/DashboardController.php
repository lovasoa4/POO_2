<?php
namespace App\Controllers;

use App\Models\Model_dashboard;

class DashboardController {

    private $dashboardModel;

    public function __construct() {
        if(session_status() === PHP_SESSION_NONE) {
            session_start();
        }
        $this->dashboardModel = new Model_dashboard();
    }

    /**
     * Affiche le dashboard pour l'utilisateur connectÃ©
     */
    public function getAllDataDashboard() {
        // ğŸ”¹ RÃ©cupÃ©rer l'ID et le nom depuis la session
        $userId = $_SESSION['id'] ?? null;
        $nom    = $_SESSION['nom'] ?? 'InvitÃ©';

        if(!$userId) {
            header("Location: /login");
            exit;
        }

        // ğŸ”¹ Totaux par mois
        $totalMonth = $this->dashboardModel->getTotalCreditDebitByMonth($userId);

        // ğŸ”¹ Totaux globaux
        $totalCredit = array_sum(array_column($totalMonth, 'total_credit'));
        $totalDebit  = array_sum(array_column($totalMonth, 'total_debit'));
        $soldeTotal  = $totalCredit - $totalDebit;

        // ğŸ”¹ Solde actuel
        $soldeActuel = $this->dashboardModel->getSoldeActuel($userId);

        // ğŸ”¹ DerniÃ¨res transactions
        $lastTransactions = $this->dashboardModel->getLastTransactions($userId, 10);

        // ğŸ”¹ PrÃ©parer les donnÃ©es Ã  passer Ã  la vue
        $data = [
            'nom'              => $nom,
            'totalMonth'       => $totalMonth,
            'totalCredit'      => $totalCredit,
            'totalDebit'       => $totalDebit,
            'soldeTotal'       => $soldeTotal,
            'soldeActuel'      => $soldeActuel,
            'lastTransactions' => $lastTransactions
        ];

        // ğŸ”¹ Charger la vue
        extract($data);

    }
}
